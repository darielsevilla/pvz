/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author HP
 */
import java.awt.Color;
import java.awt.ComponentOrientation;
import java.awt.Graphics;
import java.awt.Toolkit;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.io.*;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.Timer;
import javax.swing.border.AbstractBorder;
import javax.swing.border.Border;
import javax.swing.border.LineBorder;
import org.netbeans.lib.awtextra.AbsoluteConstraints;
import javax.sound.sampled.*;

public class wd_pickUser extends javax.swing.JFrame {

    //audio 
    private AudioThread audio = new AudioThread();

    //manejo de archivos
    private AdministradorUsuario userAdmin;
    private Administrador admin;
    private Usuario usuario;

    //variables para el juego
    private int clicked = 0;
    private ArrayList<File> users = new ArrayList();
    private Path path = Paths.get("src/users");
    private Scanner lea;
    private File actual;

    private int plantSelected = 0;

    //juego
    private ArrayList<Plant> placedPlants = new ArrayList();
    private ArrayList<Zombie> spawnedZombies = new ArrayList();
    private ArrayList<Sun> soles = new ArrayList();
    private ArrayList<ClickeablePlant> casillas = new ArrayList();
    private ArrayList<Thread> threads = new ArrayList();
    private GameOver fin;

    /**
     * Creates new form wd_pickUser
     */
    public wd_pickUser() {
        initComponents();
        //Conseguir usuarios
        userAdmin = new AdministradorUsuario("./src/users/usuarios.txt");
        userAdmin.read();

        fillusers();
        this.setResizable(false);

        clicked = 1;

    }

    public void fillusers() {

        DefaultComboBoxModel modelo = (DefaultComboBoxModel) cb_users.getModel();
        modelo.removeAllElements();
        for (Usuario u : userAdmin.getUsersList()) {
            modelo.addElement(u);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        wd_menuNiveles = new javax.swing.JFrame();
        lb_name = new javax.swing.JLabel();
        lb_welcomeBack = new javax.swing.JLabel();
        pn_menuNiveles = new javax.swing.JPanel();
        lb_back = new javax.swing.JLabel();
        lb_medal1 = new javax.swing.JLabel();
        lb_medal2 = new javax.swing.JLabel();
        lb_medal3 = new javax.swing.JLabel();
        lb_n3 = new javax.swing.JLabel();
        lb_n1 = new javax.swing.JLabel();
        lb_n2 = new javax.swing.JLabel();
        lb_title = new javax.swing.JLabel();
        lb_mm = new javax.swing.JLabel();
        wd_nivel1 = new javax.swing.JFrame();
        pn_victory = new javax.swing.JPanel();
        lb_toLevel2 = new javax.swing.JLabel();
        returnMenu1 = new javax.swing.JButton();
        lb_winnerL1 = new javax.swing.JLabel();
        pn_loose = new javax.swing.JPanel();
        bt_reintentar = new javax.swing.JButton();
        bt_menuPrincipal = new javax.swing.JButton();
        lb_loose = new javax.swing.JLabel();
        pn_level1 = new javax.swing.JPanel();
        lb_finalWave = new javax.swing.JLabel();
        pauseL1 = new javax.swing.JPanel();
        lb_pausel1 = new javax.swing.JLabel();
        pn_availablePlants = new javax.swing.JPanel();
        lb_peashooterCard = new javax.swing.JLabel();
        lb_sunflowerCard = new javax.swing.JLabel();
        lb_CherryCard = new javax.swing.JLabel();
        pn_levelbar = new roundPanel(new Color(127,129,177));
        lb_zombieHead = new javax.swing.JLabel();
        pb_level1Bar = new javax.swing.JProgressBar();
        pn_sunCount = new roundPanel(new Color(237,235,159));
        lb_sunCont = new javax.swing.JLabel();
        pn_lvl1 = new javax.swing.JLabel();
        wd_level2 = new javax.swing.JFrame();
        pn_victory2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        returnMenu2 = new javax.swing.JButton();
        lb_winnerL2 = new javax.swing.JLabel();
        pn_level2 = new javax.swing.JPanel();
        pauseL2 = new javax.swing.JPanel();
        lb_pauseL2 = new javax.swing.JLabel();
        lb_finalWave2 = new javax.swing.JLabel();
        lb_hugeWave = new javax.swing.JLabel();
        lb_level2 = new javax.swing.JLabel();
        wd_level3 = new javax.swing.JFrame();
        pn_victoryL3 = new javax.swing.JPanel();
        lb_toMain = new javax.swing.JLabel();
        lb_toMain2 = new javax.swing.JLabel();
        lb_victoryL3 = new javax.swing.JLabel();
        lb_finalWave3 = new javax.swing.JLabel();
        lb_hugeWave3 = new javax.swing.JLabel();
        pn_level3 = new javax.swing.JPanel();
        lb_pausel3 = new javax.swing.JLabel();
        lb_lvl3 = new javax.swing.JLabel();
        pauseMenu = new javax.swing.JDialog();
        marcoPauseMenu = new javax.swing.JPanel();
        contentPauseMenu = new javax.swing.JPanel();
        lb_tituloMenuPausa = new javax.swing.JLabel();
        bt_backToMainMenu = new javax.swing.JButton();
        bt_guardarysalir = new javax.swing.JButton();
        bt_continue = new javax.swing.JButton();
        cargarGuardado = new javax.swing.JDialog();
        pn_continue2 = new javax.swing.JPanel();
        jl_t1 = new javax.swing.JLabel();
        bt_cancelar = new javax.swing.JButton();
        bt_regresar = new javax.swing.JButton();
        bt_bys = new javax.swing.JButton();
        pn_continue = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        cb_users = new javax.swing.JComboBox<>();
        bt_createUser = new javax.swing.JButton();
        bt_salida = new javax.swing.JButton();
        delete = new javax.swing.JButton();
        exit = new javax.swing.JButton();
        lb_pickUser = new javax.swing.JLabel();

        wd_menuNiveles.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        wd_menuNiveles.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_name.setForeground(new java.awt.Color(255, 255, 255));
        lb_name.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_name.setText("jLabel1");
        wd_menuNiveles.getContentPane().add(lb_name, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 480, 170, -1));

        lb_welcomeBack.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/welcome back.jpg"))); // NOI18N
        wd_menuNiveles.getContentPane().add(lb_welcomeBack, new org.netbeans.lib.awtextra.AbsoluteConstraints(680, 430, -1, -1));

        pn_menuNiveles.setBackground(new java.awt.Color(51, 255, 255));
        pn_menuNiveles.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_back.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_backMouseClicked(evt);
            }
        });
        pn_menuNiveles.add(lb_back, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 460, 50, 60));

        lb_medal1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/medal.png"))); // NOI18N
        pn_menuNiveles.add(lb_medal1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 70, 60));

        lb_medal2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/medal.png"))); // NOI18N
        pn_menuNiveles.add(lb_medal2, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 340, 70, 60));

        lb_medal3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/medal.png"))); // NOI18N
        pn_menuNiveles.add(lb_medal3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 360, 70, 60));

        lb_n3.setFont(new java.awt.Font("Showcard Gothic", 0, 36)); // NOI18N
        lb_n3.setForeground(new java.awt.Color(0, 255, 0));
        lb_n3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_n3.setText("3");
        lb_n3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_n3MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_n3MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_n3MouseExited(evt);
            }
        });
        pn_menuNiveles.add(lb_n3, new org.netbeans.lib.awtextra.AbsoluteConstraints(588, 240, 140, 60));

        lb_n1.setFont(new java.awt.Font("Showcard Gothic", 0, 36)); // NOI18N
        lb_n1.setForeground(new java.awt.Color(0, 255, 0));
        lb_n1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_n1.setText("1");
        lb_n1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_n1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_n1MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_n1MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_n1MouseExited(evt);
            }
        });
        pn_menuNiveles.add(lb_n1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 250, 100, 70));

        lb_n2.setFont(new java.awt.Font("Showcard Gothic", 0, 36)); // NOI18N
        lb_n2.setForeground(new java.awt.Color(0, 255, 0));
        lb_n2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_n2.setText("2");
        lb_n2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_n2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_n2MouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                lb_n2MouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                lb_n2MouseExited(evt);
            }
        });
        pn_menuNiveles.add(lb_n2, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, 90, 130));

        lb_title.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/logo.png"))); // NOI18N
        pn_menuNiveles.add(lb_title, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 300, 90));

        lb_mm.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/mainMenu.jpg"))); // NOI18N
        pn_menuNiveles.add(lb_mm, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 910, 530));

        wd_menuNiveles.getContentPane().add(pn_menuNiveles, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        wd_nivel1.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        wd_nivel1.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pn_victory.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_toLevel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_toLevel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_toLevel2MouseClicked(evt);
            }
        });
        pn_victory.add(lb_toLevel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 480, 140, 30));

        returnMenu1.setBackground(new java.awt.Color(252, 198, 136));
        returnMenu1.setForeground(new java.awt.Color(0, 0, 0));
        returnMenu1.setText("Menu Principal");
        returnMenu1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnMenu1MouseClicked(evt);
            }
        });
        pn_victory.add(returnMenu1, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 30, -1, -1));

        lb_winnerL1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/winnerL1.png"))); // NOI18N
        pn_victory.add(lb_winnerL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        wd_nivel1.getContentPane().add(pn_victory, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        pn_loose.setOpaque(false);
        pn_loose.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        bt_reintentar.setBackground(new java.awt.Color(153, 0, 153));
        bt_reintentar.setForeground(new java.awt.Color(0, 0, 0));
        bt_reintentar.setText("Reintentar");
        bt_reintentar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_reintentarMouseClicked(evt);
            }
        });
        pn_loose.add(bt_reintentar, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 460, -1, -1));

        bt_menuPrincipal.setBackground(new java.awt.Color(153, 0, 153));
        bt_menuPrincipal.setForeground(new java.awt.Color(0, 0, 0));
        bt_menuPrincipal.setText("Menu principal");
        bt_menuPrincipal.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_menuPrincipalMouseClicked(evt);
            }
        });
        pn_loose.add(bt_menuPrincipal, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 460, -1, -1));

        lb_loose.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/loose.png"))); // NOI18N
        lb_loose.setText("l");
        pn_loose.add(lb_loose, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 563, 478));

        wd_nivel1.getContentPane().add(pn_loose, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 40, -1, 490));

        pn_level1.setBackground(new java.awt.Color(51, 255, 255));
        pn_level1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_finalWave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/finalWave.png"))); // NOI18N
        pn_level1.add(lb_finalWave, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 210, 400, 110));

        pauseL1.setBackground(new java.awt.Color(85, 87, 126));

        lb_pausel1.setForeground(new java.awt.Color(0, 255, 0));
        lb_pausel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_pausel1.setText("Pausar");
        lb_pausel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_pausel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_pausel1MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pauseL1Layout = new javax.swing.GroupLayout(pauseL1);
        pauseL1.setLayout(pauseL1Layout);
        pauseL1Layout.setHorizontalGroup(
            pauseL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
            .addGroup(pauseL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lb_pausel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE))
        );
        pauseL1Layout.setVerticalGroup(
            pauseL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 30, Short.MAX_VALUE)
            .addGroup(pauseL1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(lb_pausel1, javax.swing.GroupLayout.DEFAULT_SIZE, 30, Short.MAX_VALUE))
        );

        pn_level1.add(pauseL1, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 0, -1, 30));

        pn_availablePlants.setBackground(new java.awt.Color(86, 32, 4));
        pn_availablePlants.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pn_availablePlantsMouseClicked(evt);
            }
        });
        pn_availablePlants.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_peashooterCard.setBackground(new java.awt.Color(255, 0, 0));
        lb_peashooterCard.setForeground(new java.awt.Color(255, 0, 0));
        lb_peashooterCard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_peashooterCard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/PeashooterPack.jpg"))); // NOI18N
        lb_peashooterCard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_peashooterCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_peashooterCardMouseClicked(evt);
            }
        });
        pn_availablePlants.add(lb_peashooterCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(25, 6, -1, -1));

        lb_sunflowerCard.setBackground(new java.awt.Color(255, 0, 0));
        lb_sunflowerCard.setForeground(new java.awt.Color(255, 0, 0));
        lb_sunflowerCard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_sunflowerCard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/SunflowerSeedPack.jpg"))); // NOI18N
        lb_sunflowerCard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_sunflowerCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_sunflowerCardMouseClicked(evt);
            }
        });
        pn_availablePlants.add(lb_sunflowerCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(87, 6, -1, -1));

        lb_CherryCard.setBackground(new java.awt.Color(255, 0, 0));
        lb_CherryCard.setForeground(new java.awt.Color(255, 0, 0));
        lb_CherryCard.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_CherryCard.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/CherryBombSeedPack.jpg"))); // NOI18N
        lb_CherryCard.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_CherryCard.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_CherryCardMouseClicked(evt);
            }
        });
        pn_availablePlants.add(lb_CherryCard, new org.netbeans.lib.awtextra.AbsoluteConstraints(149, 6, -1, -1));

        pn_level1.add(pn_availablePlants, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 5, 350, 70));

        pn_levelbar.setBackground(new java.awt.Color(127, 129, 177));
        pn_levelbar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_zombieHead.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/zombieHead.png"))); // NOI18N
        pn_levelbar.add(lb_zombieHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 2, 20, -1));

        pb_level1Bar.setBackground(new java.awt.Color(102, 102, 102));
        pb_level1Bar.setForeground(new java.awt.Color(182, 224, 28));
        pn_levelbar.add(pb_level1Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 200, 8));
        pn_level1.remove(pb_level1Bar);
        pn_levelbar.add(pb_level1Bar, new org.netbeans.lib.awtextra.AbsoluteConstraints(6, 6, 200, 8),1);

        pn_level1.add(pn_levelbar, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 540, 210, 20));

        pn_sunCount.setBackground(new java.awt.Color(237, 235, 159));
        pn_sunCount.setFocusCycleRoot(true);
        pn_sunCount.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_sunCont.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        lb_sunCont.setForeground(new java.awt.Color(0, 0, 0));
        lb_sunCont.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_sunCont.setText("jLabel4");
        pn_sunCount.add(lb_sunCont, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 60, 20));

        pn_level1.add(pn_sunCount, new org.netbeans.lib.awtextra.AbsoluteConstraints(15, 57, 60, 23));

        pn_lvl1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pvzlvl1.jpg"))); // NOI18N
        pn_lvl1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                pn_lvl1MouseClicked(evt);
            }
        });
        pn_level1.add(pn_lvl1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        wd_nivel1.getContentPane().add(pn_level1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        wd_level2.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        wd_level2.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pn_victory2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jLabel4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel4MouseClicked(evt);
            }
        });
        pn_victory2.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(317, 480, 140, 30));

        returnMenu2.setBackground(new java.awt.Color(252, 198, 136));
        returnMenu2.setForeground(new java.awt.Color(0, 0, 0));
        returnMenu2.setText("Menu Principal");
        returnMenu2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                returnMenu2MouseClicked(evt);
            }
        });
        pn_victory2.add(returnMenu2, new org.netbeans.lib.awtextra.AbsoluteConstraints(650, 30, -1, -1));

        lb_winnerL2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/winnerL2.png"))); // NOI18N
        pn_victory2.add(lb_winnerL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        wd_level2.getContentPane().add(pn_victory2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        pn_level2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pauseL2.setBackground(new java.awt.Color(85, 87, 126));

        lb_pauseL2.setForeground(new java.awt.Color(0, 255, 0));
        lb_pauseL2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_pauseL2.setText("Menu");
        lb_pauseL2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_pauseL2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_pauseL2MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout pauseL2Layout = new javax.swing.GroupLayout(pauseL2);
        pauseL2.setLayout(pauseL2Layout);
        pauseL2Layout.setHorizontalGroup(
            pauseL2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_pauseL2, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
        );
        pauseL2Layout.setVerticalGroup(
            pauseL2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lb_pauseL2, javax.swing.GroupLayout.DEFAULT_SIZE, 40, Short.MAX_VALUE)
        );

        pn_level2.add(pauseL2, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 0, -1, 40));

        lb_finalWave2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/finalWave.png"))); // NOI18N
        lb_finalWave2.setText("l");
        pn_level2.add(lb_finalWave2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 240, 390, -1));

        lb_hugeWave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bigWave.png"))); // NOI18N
        lb_hugeWave.setText("lb");
        pn_level2.add(lb_hugeWave, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 270, 710, 60));

        lb_level2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pvzlvl2.jpg"))); // NOI18N
        lb_level2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_level2MouseClicked(evt);
            }
        });
        pn_level2.add(lb_level2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 570));

        wd_level2.getContentPane().add(pn_level2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        wd_level3.setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        wd_level3.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pn_victoryL3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_toMain.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_toMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_toMainMouseClicked(evt);
            }
        });
        pn_victoryL3.add(lb_toMain, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 480, 150, 30));

        lb_toMain2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_toMain2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_toMain2MouseClicked(evt);
            }
        });
        pn_victoryL3.add(lb_toMain2, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 20, 90, 20));

        lb_victoryL3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/winnerL3.png"))); // NOI18N
        pn_victoryL3.add(lb_victoryL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        wd_level3.getContentPane().add(pn_victoryL3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        lb_finalWave3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/finalWave.png"))); // NOI18N
        wd_level3.getContentPane().add(lb_finalWave3, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 240, -1, -1));

        lb_hugeWave3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bigWave.png"))); // NOI18N
        wd_level3.getContentPane().add(lb_hugeWave3, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        pn_level3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_pausel3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        lb_pausel3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_pausel3MouseClicked(evt);
            }
        });
        pn_level3.add(lb_pausel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(660, 0, 100, 30));

        lb_lvl3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pvzlvl3.jpg"))); // NOI18N
        lb_lvl3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lb_lvl3MouseClicked(evt);
            }
        });
        pn_level3.add(lb_lvl3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        wd_level3.getContentPane().add(pn_level3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 770, 570));

        pauseMenu.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        marcoPauseMenu.setBackground(new java.awt.Color(86, 88, 129));
        marcoPauseMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        contentPauseMenu.setBackground(new java.awt.Color(23, 25, 40));
        contentPauseMenu.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lb_tituloMenuPausa.setFont(new java.awt.Font("Roboto", 1, 18)); // NOI18N
        lb_tituloMenuPausa.setForeground(new java.awt.Color(216, 211, 145));
        lb_tituloMenuPausa.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lb_tituloMenuPausa.setText("JUEGO PAUSADO");
        contentPauseMenu.add(lb_tituloMenuPausa, new org.netbeans.lib.awtextra.AbsoluteConstraints(7, 20, 350, -1));

        bt_backToMainMenu.setBackground(new java.awt.Color(86, 88, 129));
        bt_backToMainMenu.setForeground(new java.awt.Color(0, 255, 0));
        bt_backToMainMenu.setText("Menu principal");
        bt_backToMainMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_backToMainMenuMouseClicked(evt);
            }
        });
        bt_backToMainMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_backToMainMenuActionPerformed(evt);
            }
        });
        contentPauseMenu.add(bt_backToMainMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 130, 150, -1));

        bt_guardarysalir.setBackground(new java.awt.Color(86, 88, 129));
        bt_guardarysalir.setForeground(new java.awt.Color(0, 255, 0));
        bt_guardarysalir.setText("Guardar y Salir");
        bt_guardarysalir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_guardarysalirMouseClicked(evt);
            }
        });
        contentPauseMenu.add(bt_guardarysalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 210, 150, -1));

        bt_continue.setBackground(new java.awt.Color(86, 88, 129));
        bt_continue.setForeground(new java.awt.Color(0, 255, 0));
        bt_continue.setText("Continuar");
        bt_continue.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_continueMouseClicked(evt);
            }
        });
        contentPauseMenu.add(bt_continue, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 60, 150, -1));

        marcoPauseMenu.add(contentPauseMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 360, 270));

        pauseMenu.getContentPane().add(marcoPauseMenu, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 400, 310));

        cargarGuardado.getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pn_continue2.setBackground(new java.awt.Color(178, 127, 72));
        pn_continue2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jl_t1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jl_t1.setForeground(new java.awt.Color(14, 201, 65));
        jl_t1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jl_t1.setText("Tiene una partida guardada");
        pn_continue2.add(jl_t1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 390, -1));

        bt_cancelar.setBackground(new java.awt.Color(149, 98, 53));
        bt_cancelar.setForeground(new java.awt.Color(14, 201, 65));
        bt_cancelar.setText("Cancelar");
        bt_cancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_cancelarMouseClicked(evt);
            }
        });
        pn_continue2.add(bt_cancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 190, 110, 40));

        bt_regresar.setBackground(new java.awt.Color(149, 98, 53));
        bt_regresar.setForeground(new java.awt.Color(14, 201, 65));
        bt_regresar.setText("Regresar");
        bt_regresar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_regresarMouseClicked(evt);
            }
        });
        pn_continue2.add(bt_regresar, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 80, 110, 40));

        bt_bys.setBackground(new java.awt.Color(149, 98, 53));
        bt_bys.setForeground(new java.awt.Color(14, 201, 65));
        bt_bys.setText("Borrar ");
        bt_bys.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_bysMouseClicked(evt);
            }
        });
        pn_continue2.add(bt_bys, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 130, 110, 40));

        cargarGuardado.getContentPane().add(pn_continue2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 410, 300));

        pn_continue.setBackground(new java.awt.Color(157, 81, 48));
        pn_continue.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        cargarGuardado.getContentPane().add(pn_continue, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 430, 320));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(51, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        cb_users.setBackground(new java.awt.Color(255, 255, 255));
        cb_users.setForeground(new java.awt.Color(0, 0, 0));
        cb_users.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cb_users.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cb_usersActionPerformed(evt);
            }
        });
        jPanel1.add(cb_users, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 170, 210, -1));

        bt_createUser.setBackground(new java.awt.Color(51, 153, 0));
        bt_createUser.setForeground(new java.awt.Color(0, 0, 0));
        bt_createUser.setText("Elegir usuario");
        bt_createUser.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bt_createUserMouseClicked(evt);
            }
        });
        bt_createUser.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_createUserActionPerformed(evt);
            }
        });
        jPanel1.add(bt_createUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 200, 130, -1));

        bt_salida.setBackground(new java.awt.Color(51, 153, 0));
        bt_salida.setForeground(new java.awt.Color(0, 0, 0));
        bt_salida.setText("Nuevo usuario");
        bt_salida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bt_salidaActionPerformed(evt);
            }
        });
        jPanel1.add(bt_salida, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 240, 130, -1));

        delete.setBackground(new java.awt.Color(255, 0, 0));
        delete.setText("Eliminar");
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
        });
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 290, -1, -1));

        exit.setBackground(new java.awt.Color(255, 0, 0));
        exit.setText("Salir");
        exit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                exitMouseClicked(evt);
            }
        });
        exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitActionPerformed(evt);
            }
        });
        jPanel1.add(exit, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, -1, -1));

        lb_pickUser.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/pve_560x450.jpg"))); // NOI18N
        lb_pickUser.setText("jLabel1");
        jPanel1.add(lb_pickUser, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 560, 450));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-4, -4, 560, 450));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cb_usersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cb_usersActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cb_usersActionPerformed

    private void exitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitActionPerformed

    private void bt_salidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_salidaActionPerformed

        String nombre = JOptionPane.showInputDialog("Ingrese nombre de usuario");
        int validar = 0;
        for (Usuario u : userAdmin.getUsersList()) {
            if (nombre.equals(u.getNombre())) {
                validar++;
                break;
            }
        }

        if (validar == 0) {
            Usuario nuevo = new Usuario(nombre);
            userAdmin.getUsersList().add(nuevo);
            userAdmin.write();
            fillusers();
        } else {
            JOptionPane.showMessageDialog(this, "Nombre Repetido");
        }

    }//GEN-LAST:event_bt_salidaActionPerformed

    private void bt_createUserActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_createUserActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_createUserActionPerformed

    private void bt_createUserMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_createUserMouseClicked

        if (cb_users.getSelectedItem() != null) {
            usuario = (Usuario) cb_users.getSelectedItem();
            lb_name.setText(usuario.getNombre());
            String path = "./src/users/" + usuario.getNombre() + ".dar";
            admin = new Administrador(path);
            admin.load();
            iniciarMenu();

        }


    }//GEN-LAST:event_bt_createUserMouseClicked

    private void lb_n1MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n1MouseEntered
        lb_n1.setForeground(new Color(0, 153, 0));
    }//GEN-LAST:event_lb_n1MouseEntered

    private void lb_n1MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n1MouseExited
        lb_n1.setForeground(new Color(0, 255, 0));
    }//GEN-LAST:event_lb_n1MouseExited

    private void lb_n1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n1MouseClicked
        if (admin.getOp() != 0) {
            iniciarPartidaGuardada();
        } else {
            iniciarNivel1();
        }
        lb_n1.setForeground(new Color(0, 255, 0));
    }//GEN-LAST:event_lb_n1MouseClicked

    private void lb_n3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n3MouseClicked
        if (admin.getOp() != 0) {
            iniciarPartidaGuardada();
        } else {
            wd_nivel1.pack();
            wd_menuNiveles.dispose();
            iniciarNivel3();
        }
        lb_n3.setForeground(new Color(0, 255, 0));

    }//GEN-LAST:event_lb_n3MouseClicked

    private void lb_n3MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n3MouseEntered
        lb_n3.setForeground(new Color(0, 153, 0));     
    }//GEN-LAST:event_lb_n3MouseEntered

    private void lb_n3MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n3MouseExited
        lb_n3.setForeground(new Color(0, 255, 0));      
    }//GEN-LAST:event_lb_n3MouseExited

    private void lb_peashooterCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_peashooterCardMouseClicked

        lb_peashooterCard.setBorder(new LineBorder(new Color(255, 0, 0)));
        lb_sunflowerCard.setBorder(null);
        lb_CherryCard.setBorder(null);
        plantSelected = 1;
        for (ClickeablePlant p : casillas) {
            p.setPlantSelected(1);
        }
        pn_level1.repaint();


    }//GEN-LAST:event_lb_peashooterCardMouseClicked


    private void pn_lvl1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_lvl1MouseClicked
        lb_peashooterCard.setBorder(null);
        for (ClickeablePlant p : casillas) {
            p.setPlantSelected(0);
        }

    }//GEN-LAST:event_pn_lvl1MouseClicked

    private void bt_reintentarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_reintentarMouseClicked
        if (wd_nivel1.isVisible()) {
            wd_nivel1.isVisible();
            iniciarNivel1();
        }
    }//GEN-LAST:event_bt_reintentarMouseClicked

    private void bt_menuPrincipalMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_menuPrincipalMouseClicked
        if (wd_nivel1.isVisible()) {
            wd_nivel1.dispose();
            wd_menuNiveles.setVisible(true);
        }
    }//GEN-LAST:event_bt_menuPrincipalMouseClicked

    private void lb_toLevel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_toLevel2MouseClicked
        usuario.setN1(1);
        userAdmin.write();
        wd_nivel1.dispose();
        iniciarNivel2();
    }//GEN-LAST:event_lb_toLevel2MouseClicked

    private void lb_sunflowerCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_sunflowerCardMouseClicked
        lb_peashooterCard.setBorder(null);
        lb_sunflowerCard.setBorder(new LineBorder(new Color(255, 0, 0)));
        lb_CherryCard.setBorder(null);
        for (ClickeablePlant p : casillas) {
            p.setPlantSelected(2);
        }
        pn_availablePlants.repaint();
    }//GEN-LAST:event_lb_sunflowerCardMouseClicked

    private void lb_level2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_level2MouseClicked
        for (ClickeablePlant p : casillas) {
            p.setPlantSelected(0);
        }
        lb_sunflowerCard.setBorder(null);
        lb_peashooterCard.setBorder(null);
        lb_CherryCard.setBorder(null);

    }//GEN-LAST:event_lb_level2MouseClicked

    private void pn_availablePlantsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_pn_availablePlantsMouseClicked
        pn_availablePlants.repaint();
        for (ClickeablePlant p : casillas) {
            p.setPlantSelected(0);
        }
    }//GEN-LAST:event_pn_availablePlantsMouseClicked

    private void lb_CherryCardMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_CherryCardMouseClicked
        lb_peashooterCard.setBorder(null);
        lb_sunflowerCard.setBorder(null);
        lb_CherryCard.setBorder(new LineBorder(new Color(255, 0, 0)));
        plantSelected = 3;

        for (ClickeablePlant c : casillas) {
            c.setPlantSelected(3);
        }
    }//GEN-LAST:event_lb_CherryCardMouseClicked

    private void jLabel4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel4MouseClicked
        usuario.setN2(1);
        userAdmin.write();
        wd_level2.dispose();
        iniciarNivel3();
    }//GEN-LAST:event_jLabel4MouseClicked

    private void lb_lvl3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_lvl3MouseClicked
        for (ClickeablePlant p : casillas) {
            p.setPlantSelected(0);
        }
        lb_peashooterCard.setBorder(null);
        lb_sunflowerCard.setBorder(null);
        lb_CherryCard.setBorder(null);
    }//GEN-LAST:event_lb_lvl3MouseClicked

    private void lb_toMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_toMainMouseClicked
        usuario.setN3(1);
        userAdmin.write();
        wd_level3.dispose();
        iniciarMenu();
    }//GEN-LAST:event_lb_toMainMouseClicked

    private void lb_toMain2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_toMain2MouseClicked
        usuario.setN3(1);
        userAdmin.write();
        for (Plant p : placedPlants) {
            if (p.isAlive()) {
                p.stop();
                pn_level3.remove(p.getPlantLabel());
            }
        }
        for (Zombie z : spawnedZombies) {
            if (z.isAlive()) {
                z.stop();
                pn_level2.remove(z.getZombieLabel());

            }
        }
        for (Thread t : threads) {
            if (t.isAlive()) {
                t.stop();
            }
        }
        fin.stop();
        placedPlants.clear();
        spawnedZombies.clear();
        wd_level3.dispose();
        iniciarMenu();
    }//GEN-LAST:event_lb_toMain2MouseClicked

    private void lb_pausel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_pausel1MouseClicked
        iniciarPauseMenu(wd_nivel1);
    }//GEN-LAST:event_lb_pausel1MouseClicked

    private void lb_n2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n2MouseClicked
        if (admin.getOp() != 0) {
            iniciarPartidaGuardada();
        } else {
            wd_nivel1.pack();
            wd_menuNiveles.dispose();
            iniciarNivel2();
        }
        lb_n2.setForeground(new Color(0, 255, 0));

    }//GEN-LAST:event_lb_n2MouseClicked

    private void lb_n2MouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n2MouseEntered
        lb_n2.setForeground(new Color(0, 153, 0));
    }//GEN-LAST:event_lb_n2MouseEntered

    private void lb_n2MouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_n2MouseExited
        lb_n2.setForeground(new Color(0, 255, 0));
    }//GEN-LAST:event_lb_n2MouseExited

    private void bt_continueMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_continueMouseClicked
        if (!audio.isAlive()) {
            audio = new AudioThread("./src/Audio/levels.wav");
            audio.start();
        }
        for (Plant p : placedPlants) {
            p.resume();
        }

        for (Zombie z : spawnedZombies) {
            z.resume();

        }

        for (Thread t : threads) {
            t.resume();
        }
        fin.resume();
        pauseMenu.dispose();
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_continueMouseClicked

    private void lb_pauseL2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_pauseL2MouseClicked
        iniciarPauseMenu(wd_level2);
    }//GEN-LAST:event_lb_pauseL2MouseClicked

    private void lb_pausel3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_pausel3MouseClicked
        iniciarPauseMenu(wd_level3);
    }//GEN-LAST:event_lb_pausel3MouseClicked

    private void returnMenu1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnMenu1MouseClicked
        usuario.setN1(1);
        userAdmin.write();
        for (Plant p : placedPlants) {
            if (p.isAlive()) {
                p.stop();
                pn_level1.remove(p.getPlantLabel());
            }
        }
        for (Zombie z : spawnedZombies) {
            if (z.isAlive()) {
                z.stop();
                pn_level1.remove(z.getZombieLabel());

            }
        }
        for (Thread t : threads) {
            if (t.isAlive()) {
                t.stop();
            }
        }
        fin.stop();
        placedPlants.clear();
        spawnedZombies.clear();
        wd_nivel1.dispose();
        iniciarMenu();

    }//GEN-LAST:event_returnMenu1MouseClicked

    private void returnMenu2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_returnMenu2MouseClicked
        usuario.setN2(1);
        userAdmin.write();
        for (Plant p : placedPlants) {
            if (p.isAlive()) {
                p.stop();
                pn_level2.remove(p.getPlantLabel());
            }
        }
        for (Zombie z : spawnedZombies) {
            if (z.isAlive()) {
                z.stop();
                pn_level2.remove(z.getZombieLabel());

            }
        }
        for (Thread t : threads) {
            if (t.isAlive()) {
                t.stop();
            }
        }
        fin.stop();
        placedPlants.clear();
        spawnedZombies.clear();
        wd_level2.dispose();
        iniciarMenu();
    }//GEN-LAST:event_returnMenu2MouseClicked

    private void bt_backToMainMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_backToMainMenuMouseClicked
        for (Plant p : placedPlants) {
            if (p.isAlive()) {
                p.stop();
                if (wd_nivel1.isVisible()) {
                    pn_level1.remove(p.getPlantLabel());
                } else if (wd_level2.isVisible()) {
                    pn_level2.remove(p.getPlantLabel());
                } else {
                    pn_level3.remove(p.getPlantLabel());
                }

            }
        }
        for (Zombie z : spawnedZombies) {
            if (z.isAlive()) {
                z.stop();
            }
            if (wd_nivel1.isVisible()) {
                pn_level1.remove(z.getZombieLabel());
            } else if (wd_level2.isVisible()) {
                pn_level2.remove(z.getZombieLabel());
            } else {
                pn_level3.remove(z.getZombieLabel());
            }

        }
        for (Thread t : threads) {
            if (t.isAlive()) {
                t.stop();
            }
        }
        fin.stop();
        placedPlants.clear();
        spawnedZombies.clear();
        if (wd_nivel1.isVisible()) {
            wd_nivel1.dispose();
        } else if (wd_level2.isVisible()) {
            wd_level2.dispose();
        } else {
            wd_level3.dispose();
        }
        iniciarMenu();
        pauseMenu.dispose();
    }//GEN-LAST:event_bt_backToMainMenuMouseClicked

    private void bt_backToMainMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bt_backToMainMenuActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bt_backToMainMenuActionPerformed

    private void bt_guardarysalirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_guardarysalirMouseClicked
        admin.setPlantas(placedPlants);
        admin.setZombies(spawnedZombies);
        admin.setCasillas(casillas);
        admin.setValue(lb_sunCont.getText());
        admin.setOthers(threads);
        admin.setOver(fin);

        JPanel panel = new JPanel();

        if (wd_nivel1.isVisible()) {
            panel = pn_level1;
        } else if (wd_level2.isVisible()) {
            panel = pn_level2;
        } else if (wd_level3.isVisible()) {
            panel = pn_level3;
        }

        for (Plant p : placedPlants) {
            panel.remove(p.getPlantLabel());
            panel.repaint();
        }

        for (Zombie z : spawnedZombies) {
            panel.remove(z.getZombieLabel());
            panel.repaint();
        }

        if (wd_nivel1.isVisible()) {

            admin.setOp(1);

        } else if (wd_level2.isVisible()) {
            admin.setOp(2);

        } else if (wd_level3.isVisible()) {
            admin.setOp(3);
        }
        admin.save();

        iniciarMenu();
        wd_nivel1.dispose();
        wd_level2.dispose();
        wd_level3.dispose();
        pauseMenu.dispose();

    }//GEN-LAST:event_bt_guardarysalirMouseClicked

    public void continuarNivel() {
        JPanel gamepanel = new JPanel();
        JFrame window = new JFrame();
        wd_nivel1.pack();

        placedPlants = admin.getPlantas();
        spawnedZombies = admin.getZombies();
        threads = admin.getOthers();
        casillas = admin.getCasillas();

        fin = admin.getOver();
        
        //audio
        if(audio.isAlive()){
            audio.getClip().close();
            audio.stop();
        }
        
        audio = new AudioThread("./src/Audio/levels.wav");
        audio.start();
        
        if (admin.getOp() == 1) {
            gamepanel = pn_level1;
            window = wd_nivel1;
            fin.setWin(pn_victory);
            lb_sunflowerCard.setVisible(false);
            lb_CherryCard.setVisible(false);
            lb_finalWave.setVisible(false);
        } else if (admin.getOp() == 2) {
            gamepanel = pn_level2;
            window = wd_level2;
            fin.setWin(pn_victory2);
            lb_sunflowerCard.setVisible(true);
            lb_finalWave2.setVisible(false);
            lb_hugeWave.setVisible(false);
            lb_CherryCard.setVisible(false);
        } else if (admin.getOp() == 3) {
            gamepanel = pn_level3;
            window = wd_level3;
            fin.setWin(pn_victoryL3);
            lb_hugeWave3.setVisible(false);
            lb_finalWave3.setVisible(false);
        }

        for (ClickeablePlant c : casillas) {
            c.setPanel(gamepanel);
            c.setPlacedPlants(placedPlants);
            c.setZombies(spawnedZombies);
            c.setSunCount(lb_sunCont);
            lb_sunCont.setText(admin.getValue());

            c.addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    c.place(c.getSunCount(), c.getPlantSelected());
                }
            });
            gamepanel.add(c, new AbsoluteConstraints((int) c.getX(), (int) c.getY(), c.getWidth(), c.getHeight()), 0);
        }

        for (Plant p : placedPlants) {
            p.setPanel(gamepanel);
            p.setZombies(spawnedZombies);
            if (p instanceof Peashooter) {
                p.setNormal(new ImageIcon(Toolkit.getDefaultToolkit().createImage(getClass().getResource("/imagenes/peashooterGif.gif"))));
            } else if (p instanceof SunFlower) {
                p.setNormal(new ImageIcon(Toolkit.getDefaultToolkit().createImage(getClass().getResource("/imagenes/girasolGIF.gif"))));
            }

            if (p.getHp() > 0) {
                gamepanel.add(p.getPlantLabel(), new AbsoluteConstraints(p.getPlantLabel().getX(), p.getPlantLabel().getY(), p.getPlantLabel().getWidth(), p.getPlantLabel().getHeight()), 1);
                gamepanel.add(p.getCasilla(), new AbsoluteConstraints(p.getCasilla().getX(), p.getCasilla().getY(), p.getCasilla().getWidth(), p.getCasilla().getHeight()), 1);
            }

            casillas.add((ClickeablePlant) p.getCasilla());
            p.getCasilla().addMouseListener(new MouseAdapter() {
                public void mouseClicked(MouseEvent e) {
                    ((ClickeablePlant) p.getCasilla()).place(((ClickeablePlant) p.getCasilla()).getSunCount(), ((ClickeablePlant) p.getCasilla()).getPlantSelected());
                }
            });
        }

        for (Zombie z : spawnedZombies) {
            z.setGamePanel(gamepanel);
            z.setPlantas(placedPlants);
            z.setZombies(spawnedZombies);

            if (z instanceof NormalZombie) {
                z.setNormal(new ImageIcon((Toolkit.getDefaultToolkit().createImage(getClass().getResource("/imagenes/zombieIdle.gif")))));
            } else if (z instanceof FlagZombie) {
                z.setNormal(new ImageIcon((Toolkit.getDefaultToolkit().createImage(getClass().getResource("/imagenes/flagZombieIdle.gif")))));
            } else if (z instanceof coneHead) {
                if (z.getHp() > 200) {
                    z.setNormal(new ImageIcon(getClass().getResource("/imagenes/coneHeadIdle.gif")));
                } else {
                    z.setNormal(new ImageIcon((Toolkit.getDefaultToolkit().createImage(getClass().getResource("/imagenes/zombieIdle.gif")))));
                }
            }
            if (z.getHp() > 0) {
                gamepanel.add(z.getZombieLabel(), new AbsoluteConstraints(z.getZombieLabel().getX(), z.getZombieLabel().getY(), z.getZombieLabel().getWidth(), z.getZombieLabel().getHeight()), 0);
            }

        }

        for (Thread t : threads) {
            if (t instanceof ProgressBar) {
                pb_level1Bar.setMaximum(((ProgressBar) t).getPb().getMaximum());
                pb_level1Bar.setValue(((ProgressBar) t).getPb().getValue());
                JLabel label = ((ProgressBar) t).getLabel();
                int x = label.getX();
                int y = label.getY();
                ((ProgressBar) t).setPb(pb_level1Bar);
                pb_level1Bar.setComponentOrientation(ComponentOrientation.RIGHT_TO_LEFT);
                ((ProgressBar) t).setLabel(lb_zombieHead);
                ((ProgressBar) t).setBarPanel(pn_levelbar);
                ((ProgressBar) t).setZombies(spawnedZombies);
                pn_levelbar.add(lb_zombieHead, new AbsoluteConstraints(x,y, ((ProgressBar) t).getLabel().getWidth(), ((ProgressBar) t).getLabel().getHeight()), 0);
            } else if (t instanceof Threadlvl1) {
                ((Threadlvl1) t).setGamepanel(gamepanel);
                ((Threadlvl1) t).setZombies(spawnedZombies);
                ((Threadlvl1) t).setPlants(placedPlants);
            } else if (t instanceof Threadlvl2) {
                ((Threadlvl2) t).setGamepanel(gamepanel);
                ((Threadlvl2) t).setPlants(placedPlants);
                ((Threadlvl2) t).setZombies(spawnedZombies);
            } else if (t instanceof Threadlvl3) {
                ((Threadlvl3) t).setGamepanel(gamepanel);
                ((Threadlvl3) t).setPlantas(placedPlants);
                ((Threadlvl3) t).setZombies(spawnedZombies);
            } else if (t instanceof Threadsuns) {
                ((Threadsuns) t).setPanel(gamepanel);
                ((Threadsuns) t).setCont(lb_sunCont);

            }
        }

        fin.setZombies(spawnedZombies);
        fin.setPlants(placedPlants);
        fin.setThreads(threads);

        fin.setLvl1(gamepanel);
        fin.setLoose(pn_loose);

        pn_loose.setVisible(false);
        fin.getWin().setVisible(false);

        gamepanel.add(pn_availablePlants, new AbsoluteConstraints(pn_availablePlants.getX(), pn_availablePlants.getY(), pn_availablePlants.getWidth(), pn_availablePlants.getHeight()), 0);
        gamepanel.add(pn_sunCount, new AbsoluteConstraints(pn_sunCount.getX(), pn_sunCount.getY(), pn_sunCount.getWidth(), pn_sunCount.getHeight()), 0);
        gamepanel.add(pn_levelbar, new AbsoluteConstraints(pn_levelbar.getX(), pn_levelbar.getY(), pn_levelbar.getWidth(), pn_levelbar.getHeight()), 0);
        window.pack();
        window.setLocationRelativeTo(this);
        this.setVisible(false);
        window.setVisible(true);

        for (Plant p : placedPlants) {
            p.setZombies(spawnedZombies);
            if (p.isAlive()) {
                p.resume();
            } else {
                p.start();
            }
        }

        for (Zombie z : spawnedZombies) {
            if (z.isAlive()) {
                z.resume();
            } else {
                if (z instanceof NormalZombie) {
                    z.setNormal(new ImageIcon((Toolkit.getDefaultToolkit().createImage(getClass().getResource("/imagenes/zombieIdle.gif")))));
                }
                z.setPlantas(placedPlants);
            }
        }

        for (Thread t : threads) {

            if (t.isAlive()) {
                t.resume();
            } else {

                t.start();

            }

        }
        
        if (fin.isAlive()) {
            fin.resume();
        } else {
            fin.start();
        }
        wd_menuNiveles.dispose();
        cargarGuardado.dispose();

    }

    private void bt_cancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_cancelarMouseClicked
        cargarGuardado.dispose();
    }//GEN-LAST:event_bt_cancelarMouseClicked

    private void bt_bysMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_bysMouseClicked
        admin.reset();
        admin.load();
        cargarGuardado.dispose();

    }//GEN-LAST:event_bt_bysMouseClicked

    private void bt_regresarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bt_regresarMouseClicked
        continuarNivel();
        admin.reset();
        admin.load();
    }//GEN-LAST:event_bt_regresarMouseClicked

    private void exitMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_exitMouseClicked
       System.exit(0);
    }//GEN-LAST:event_exitMouseClicked

    private void lb_backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lb_backMouseClicked
        this.setVisible(true);
        wd_menuNiveles.dispose();
        if(audio.isAlive()){
            audio.getClip().close();
            audio.stop();
        }
    }//GEN-LAST:event_lb_backMouseClicked

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        userAdmin.getUsersList().remove((Usuario)cb_users.getSelectedItem());
        userAdmin.write();
        userAdmin.read();
        fillusers();
    }//GEN-LAST:event_deleteMouseClicked

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteActionPerformed

    public void iniciarNivel1() {
        //audio

        if (audio.isAlive()) {
            audio.getClip().close();
            audio.stop();
        }

        audio = new AudioThread("./src/Audio/levels.wav");
        audio.start();
        spawnedZombies.clear();
        placedPlants.clear();
        //iniciar ventana
        wd_nivel1.pack();
        wd_nivel1.setLocationRelativeTo(null);
        wd_nivel1.setVisible(true);
        wd_nivel1.setResizable(false);
        pn_level1.setVisible(true);
        //reiniciar progress bar
        pn_levelbar.remove(lb_zombieHead);
        pn_levelbar.add(lb_zombieHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 2, 20, -1), 0);
        pn_level1.add(pn_availablePlants, new AbsoluteConstraints(pn_availablePlants.getX(), pn_availablePlants.getY(), pn_availablePlants.getWidth(), pn_availablePlants.getHeight()), 0);
        pn_level1.add(pn_sunCount, new AbsoluteConstraints(pn_sunCount.getX(), pn_sunCount.getY(), pn_sunCount.getWidth(), pn_sunCount.getHeight()), 0);
        pn_level1.add(pn_levelbar, new AbsoluteConstraints(pn_levelbar.getX(), pn_levelbar.getY(), pn_levelbar.getWidth(), pn_levelbar.getHeight()), 0);
        pn_levelbar.repaint();
        pb_level1Bar.setValue(0);

        //añadir clickeables
        casillas.clear();
        for (int i = 0; i < 9; i++) {
            ClickeablePlant c = new ClickeablePlant(pn_level1, (20 + 80 * i), 260, 80, 90, lb_sunCont);
            c.setZombies(spawnedZombies);
            c.setPlacedPlants(placedPlants);
            pn_level1.add(c, new AbsoluteConstraints((int) c.getX(), (int) c.getY(), 80, 90), 0);
            casillas.add(c);
        }
        //setear como invisibles los paneles/labels adicionales de la ventana
        pn_loose.setVisible(false);
        lb_finalWave.setVisible(false);
        pn_victory.setVisible(false);
        lb_sunflowerCard.setVisible(false);
        lb_CherryCard.setVisible(false);
        lb_peashooterCard.setBorder(null);

        //reiniciar valor de soles
        threads.clear();
        wd_menuNiveles.dispose();
        lb_sunCont.setText("150");
        lb_sunCont.setVisible(false);
        lb_sunCont.setVisible(true);

        //iniciar threads
        Threadsuns suns = new Threadsuns(pn_level1, lb_sunCont, soles);
        threads.add(suns);
        suns.start();
        //ThreadProgressBar bar = new ThreadProgressBar(pb_level1Bar, lb_zombieHead, pn_levelbar, 1);
        ProgressBar bar = new ProgressBar(pb_level1Bar, lb_zombieHead, pn_levelbar);
        bar.setZombies(spawnedZombies);
        threads.add(bar);
        Threadlvl1 empezar = new Threadlvl1(pn_level1, lb_finalWave, bar);
        empezar.setPlants(placedPlants);
        empezar.setZombies(spawnedZombies);
        threads.add(empezar);
        empezar.start();

        fin = new GameOver(pn_victory, pn_loose, pn_level1);
        fin.setPlants(placedPlants);
        do {
            fin.setZombies(spawnedZombies);
        } while (spawnedZombies.size() != 5);
        fin.setSuns(soles);
        fin.setThreads(threads);

        fin.start();

    }

    public void iniciarNivel2() {
        if (audio.isAlive()) {
            audio.getClip().close();
            audio.stop();
        }

        audio = new AudioThread("./src/Audio/levels.wav");
        audio.start();
        //abrir la ventana
        spawnedZombies.clear();
        placedPlants.clear();
        wd_level2.pack();
        wd_level2.setLocationRelativeTo(null);
        wd_level2.setVisible(true);
        //añadir paneles necesarios
        wd_level2.setResizable(false);
        pn_level2.add(pn_availablePlants, new AbsoluteConstraints(pn_availablePlants.getX(), pn_availablePlants.getY(), pn_availablePlants.getWidth(), pn_availablePlants.getHeight()), 0);
        pn_level2.add(pn_levelbar, new AbsoluteConstraints(pn_levelbar.getX(), pn_levelbar.getY(), pn_levelbar.getWidth(), pn_levelbar.getHeight()), 0);
        wd_level2.add(pn_loose, new AbsoluteConstraints(0, 0, pn_loose.getWidth(), pn_loose.getHeight()), 0);
        pn_level2.setVisible(true);

        pn_levelbar.remove(lb_zombieHead);
        pn_levelbar.add(lb_zombieHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 2, 20, -1), 0);

        pn_levelbar.repaint();
        pb_level1Bar.setValue(0);

        lb_CherryCard.setVisible(false);
        pn_loose.setVisible(false);
        lb_sunCont.setText("50");

        pn_level2.add(pn_sunCount, new AbsoluteConstraints(pn_sunCount.getX(), pn_sunCount.getY(), pn_sunCount.getWidth(), pn_sunCount.getHeight()), 0);
        pn_victory2.setVisible(false);
        lb_finalWave2.setVisible(false);
        lb_hugeWave.setVisible(false);

        //setup de ClickeablePanels
        int x1 = 30;
        int y1 = 170;
        int w1 = 80;
        int h1 = 90;
        casillas.clear();
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 3; j++) {
                ClickeablePlant p = new ClickeablePlant(pn_level2, x1 + (i * 80), y1 + (j * 90), 80, 90, lb_sunCont);
                p.setPlacedPlants(placedPlants);
                p.setZombies(spawnedZombies);

                casillas.add(p);
                pn_level2.add(p, new AbsoluteConstraints(p.getX(), p.getY(), 80, 90), 0);
            }
        }
        pn_level2.repaint();

        //reinicio de variales esenciales
        lb_sunCont.setText("50");
        lb_peashooterCard.setBorder(null);
        lb_sunflowerCard.setVisible(true);

        //inicio de Threads 
        threads.clear();

        Threadsuns suns = new Threadsuns(pn_level2, lb_sunCont, soles);
        threads.add(suns);
        suns.start();

        ProgressBar bar = new ProgressBar(pb_level1Bar, lb_zombieHead, pn_levelbar);
        bar.setZombies(spawnedZombies);
        threads.add(bar);

        Threadlvl2 inicio = new Threadlvl2(pn_level2, lb_finalWave2, lb_hugeWave, bar);
        inicio.setZombies(spawnedZombies);
        inicio.setPlants(placedPlants);
        threads.add(inicio);
        inicio.start();
        fin = new GameOver(pn_victory2, pn_loose, pn_level2);
        fin.setThreads(threads);
        fin.setSuns(soles);
        fin.setPlants(placedPlants);
        fin.setZombies(spawnedZombies);
        fin.start();

    }

    public void iniciarNivel3() {
        //audio 
        if (audio.isAlive()) {
            audio.getClip().close();
            audio.stop();
        }

        audio = new AudioThread("./src/Audio/levels.wav");
        audio.start();

        spawnedZombies.clear();
        placedPlants.clear();
        //iniciar ventana
        wd_level3.pack();
        wd_level3.setResizable(false);
        wd_level3.setLocationRelativeTo(null);
        wd_level3.setVisible(true);
        pn_level3.setVisible(true);
        //setup

        pn_level3.add(pn_availablePlants, new AbsoluteConstraints(pn_availablePlants.getX(), pn_availablePlants.getY(), pn_availablePlants.getWidth(), pn_availablePlants.getHeight()), 0);
        pn_level3.add(pn_levelbar, new AbsoluteConstraints(pn_levelbar.getX(), pn_levelbar.getY(), pn_levelbar.getWidth(), pn_levelbar.getHeight()), 0);
        wd_level3.add(pn_loose, new AbsoluteConstraints(0, 0, pn_loose.getWidth(), pn_loose.getHeight()), 0);

        pn_levelbar.remove(lb_zombieHead);
        pn_levelbar.add(lb_zombieHead, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 2, 20, -1), 0);

        lb_sunCont.setText("50");
        pn_level3.add(pn_sunCount, new AbsoluteConstraints(pn_sunCount.getX(), pn_sunCount.getY(), pn_sunCount.getWidth(), pn_sunCount.getHeight()), 0);

        lb_peashooterCard.setBorder(null);
        lb_sunflowerCard.setBorder(null);
        lb_CherryCard.setBorder(null);

        lb_peashooterCard.setVisible(true);
        lb_sunflowerCard.setVisible(true);
        lb_CherryCard.setVisible(true);
        pn_availablePlants.setVisible(true);
        pn_sunCount.setVisible(true);
        pn_levelbar.repaint();
        pb_level1Bar.setValue(0);

        //setear casillas
        int x1 = 30;
        int y1 = 170;
        int w1 = 80;
        int h1 = 90;
        casillas.clear();
        for (int i = 0; i < 9; i++) {
            for (int j = 0; j < 3; j++) {
                ClickeablePlant p = new ClickeablePlant(pn_level3, x1 + (i * 80), y1 + (j * 90), 80, 90, lb_sunCont);
                p.setPlacedPlants(placedPlants);
                p.setZombies(spawnedZombies);

                casillas.add(p);
                pn_level3.add(p, new AbsoluteConstraints(p.getX(), p.getY(), 80, 90), 0);
            }
        }

        //reinicio de componentes
        pn_loose.setVisible(false);
        lb_hugeWave3.setVisible(false);
        lb_finalWave3.setVisible(false);
        pn_victoryL3.setVisible(false);

        //iniciar threads
        threads.clear();
        ProgressBar bar = new ProgressBar(pb_level1Bar, lb_zombieHead, pn_levelbar);
        bar.setZombies(spawnedZombies);
        threads.add(bar);
        Threadsuns suns = new Threadsuns(pn_level3, lb_sunCont, soles);
        threads.add(suns);
        suns.start();
        Threadlvl3 inicio = new Threadlvl3(pn_level3, lb_finalWave3, lb_hugeWave3, bar);
        inicio.setPlantas(placedPlants);
        inicio.setZombies(spawnedZombies);
        threads.add(inicio);
        inicio.start();
        fin = new GameOver(pn_victoryL3, pn_loose, pn_level3);
        fin.setThreads(threads);
        fin.setZombies(spawnedZombies);
        fin.setPlants(placedPlants);
        fin.start();
    }

    public void iniciarMenu() {

        this.setVisible(false);

        if (audio.isAlive()) {
            audio.getClip().close();
            audio.stop();
        }
        audio = new AudioThread("./src/Audio/dave.wav");
        audio.start();

        clicked = 1;
        wd_menuNiveles.pack();
        if (usuario.getN1() == 0) {
            lb_medal1.setVisible(false);
             lb_n2.setEnabled(false);
        } else {
            lb_medal1.setVisible(true);
             lb_n2.setEnabled(true);
        }

        if (usuario.getN2() == 0) {
            lb_medal2.setVisible(false);
             lb_n3.setEnabled(false);
           
        } else {
            lb_medal2.setVisible(true);
            lb_n3.setEnabled(true);
        }

        if (usuario.getN3() == 0) {
            lb_medal3.setVisible(false);
           
        } else {
            lb_medal3.setVisible(true);
            
        }
        
        //niveles desbloqueados
      
        wd_menuNiveles.setSize(910, 558);
        wd_menuNiveles.setLocationRelativeTo(null);
        wd_menuNiveles.setResizable(false);
        wd_menuNiveles.setVisible(true);
    }

    public void iniciarPauseMenu(JFrame ventana) {

        audio.getClip().close();
        audio.stop();

        for (Plant p : placedPlants) {
            if (p.isAlive()) {
                p.suspend();
            }
        }
        for (Zombie z : spawnedZombies) {
            if (z.isAlive()) {
                z.suspend();

            }
        }
        for (Thread t : threads) {
            if (t.isAlive()) {
                t.suspend();
            }
        }

        fin.suspend();

        pauseMenu.pack();
        pauseMenu.setModal(true);
        pauseMenu.setLocationRelativeTo(ventana);
        pauseMenu.setVisible(true);

    }

    public void iniciarPartidaGuardada() {
        cargarGuardado.pack();
        cargarGuardado.setModal(true);
        cargarGuardado.setLocationRelativeTo(wd_menuNiveles);
        cargarGuardado.setVisible(true);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Window".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(wd_pickUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(wd_pickUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(wd_pickUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(wd_pickUser.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new wd_pickUser().setVisible(true);

            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bt_backToMainMenu;
    private javax.swing.JButton bt_bys;
    private javax.swing.JButton bt_cancelar;
    private javax.swing.JButton bt_continue;
    private javax.swing.JButton bt_createUser;
    private javax.swing.JButton bt_guardarysalir;
    private javax.swing.JButton bt_menuPrincipal;
    private javax.swing.JButton bt_regresar;
    private javax.swing.JButton bt_reintentar;
    private javax.swing.JButton bt_salida;
    private javax.swing.JDialog cargarGuardado;
    private javax.swing.JComboBox<String> cb_users;
    private javax.swing.JPanel contentPauseMenu;
    private javax.swing.JButton delete;
    private javax.swing.JButton exit;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel jl_t1;
    private javax.swing.JLabel lb_CherryCard;
    private javax.swing.JLabel lb_back;
    private javax.swing.JLabel lb_finalWave;
    private javax.swing.JLabel lb_finalWave2;
    private javax.swing.JLabel lb_finalWave3;
    private javax.swing.JLabel lb_hugeWave;
    private javax.swing.JLabel lb_hugeWave3;
    private javax.swing.JLabel lb_level2;
    private javax.swing.JLabel lb_loose;
    private javax.swing.JLabel lb_lvl3;
    private javax.swing.JLabel lb_medal1;
    private javax.swing.JLabel lb_medal2;
    private javax.swing.JLabel lb_medal3;
    private javax.swing.JLabel lb_mm;
    private javax.swing.JLabel lb_n1;
    private javax.swing.JLabel lb_n2;
    private javax.swing.JLabel lb_n3;
    private javax.swing.JLabel lb_name;
    private javax.swing.JLabel lb_pauseL2;
    private javax.swing.JLabel lb_pausel1;
    private javax.swing.JLabel lb_pausel3;
    private javax.swing.JLabel lb_peashooterCard;
    private javax.swing.JLabel lb_pickUser;
    private javax.swing.JLabel lb_sunCont;
    private javax.swing.JLabel lb_sunflowerCard;
    private javax.swing.JLabel lb_title;
    private javax.swing.JLabel lb_tituloMenuPausa;
    private javax.swing.JLabel lb_toLevel2;
    private javax.swing.JLabel lb_toMain;
    private javax.swing.JLabel lb_toMain2;
    private javax.swing.JLabel lb_victoryL3;
    private javax.swing.JLabel lb_welcomeBack;
    private javax.swing.JLabel lb_winnerL1;
    private javax.swing.JLabel lb_winnerL2;
    private javax.swing.JLabel lb_zombieHead;
    private javax.swing.JPanel marcoPauseMenu;
    private javax.swing.JPanel pauseL1;
    private javax.swing.JPanel pauseL2;
    private javax.swing.JDialog pauseMenu;
    private javax.swing.JProgressBar pb_level1Bar;
    private javax.swing.JPanel pn_availablePlants;
    private javax.swing.JPanel pn_continue;
    private javax.swing.JPanel pn_continue2;
    private javax.swing.JPanel pn_level1;
    private javax.swing.JPanel pn_level2;
    private javax.swing.JPanel pn_level3;
    private javax.swing.JPanel pn_levelbar;
    private javax.swing.JPanel pn_loose;
    private javax.swing.JLabel pn_lvl1;
    private javax.swing.JPanel pn_menuNiveles;
    private javax.swing.JPanel pn_sunCount;
    private javax.swing.JPanel pn_victory;
    private javax.swing.JPanel pn_victory2;
    private javax.swing.JPanel pn_victoryL3;
    private javax.swing.JButton returnMenu1;
    private javax.swing.JButton returnMenu2;
    private javax.swing.JFrame wd_level2;
    private javax.swing.JFrame wd_level3;
    private javax.swing.JFrame wd_menuNiveles;
    private javax.swing.JFrame wd_nivel1;
    // End of variables declaration//GEN-END:variables
}
